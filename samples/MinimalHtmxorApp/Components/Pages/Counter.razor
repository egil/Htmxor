@page "/counter"
@inherits ConditionalComponentBase
<PageTitle>Counter</PageTitle>

<h1>Counter</h1>
<p>
    This is a htmx enabled counter.
</p>
<p>
    During a htmx requests, the elements in this component will not be rendered (this paragraph), because the component
    inherits from <code>ConditionalComponentBase</code>. Child components, like the <code>HtmxPartial</code> component,
    will render out its markup during htmx requests and during normal requests.
</p>
<p>
    This declaratively enable the concept <a href="https://htmx.org/essays/template-fragments/" target="_blank">template fragments</a>.
</p>

<div id="counter">
    <HtmxFragment>
        <p role="status">
            Current count: @CurrentCount
        </p>
        <button class="btn btn-primary"
                hx-put="/counter"
                hx-vals='{ "CurrentCount": @(CurrentCount) }'
                hx-target="#counter"
                @onput="IncrementCount">
            Click me
        </button>
    </HtmxFragment>
</div>

@code {
    [SupplyParameterFromForm]
    private int CurrentCount { get; set; } = 0;

    private void IncrementCount(HtmxEventArgs args)
    {
        // Access the HtmxContextEventArgs to control
        // the response headers to the client.
        // E.g.: args.Response.StatusCode(201);

        CurrentCount++;
    }
}
