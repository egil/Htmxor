@inherits ConditionalComponentBase
@page "/examples/slow-infinite-scroll"
@code {
    private const int PageSize = 20;
    private IEnumerable<Contact> contacts = Enumerable.Empty<Contact>();

    [SupplyParameterFromQuery(Name = "page")]
    private int Page { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Only load contact data during a direct request, since the loading
        // is slow it would prevent the page from rendering initially.
        contacts = Context.Request.RoutingMode == RoutingMode.Direct
            ? await GetContactsAsync(Page)
            : Enumerable.Empty<Contact>();
    }

    private static async Task<IEnumerable<Contact>> GetContactsAsync(int pageNumber)
    {
        // Simulate a slow data source.
        await Task.Delay(TimeSpan.FromMilliseconds(2500));
        return Contacts.Data.Values.Skip(pageNumber * PageSize).Take(PageSize);
    }
}
<h1>Infinite Scroll</h1>
<p>This is a Htmxor version of the <a href="https://htmx.org/examples/infinite-scroll/" title="Infinite Scroll example">Infinite Scroll</a> example at htmx.org.</p>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
        </tr>
    </thead>
    <tbody>
        <HtmxFragment>
            <HtmxFragment RenderDuringStandardRequest="false">
                @foreach (var contact in contacts)
                {
                    <tr>
                        <th>@contact.Id</th>
                        <td>@contact.FirstName</td>
                        <td>@contact.LastName</td>
                        <td>@contact.Email</td>
                    </tr>
                }
            </HtmxFragment>
            <tr hx-get="/examples/slow-infinite-scroll?page=@(Page + 1)" hx-trigger=@Triggers.Revealed hx-swap="outerHTML">
                <td colspan="4" class="text-center htmx-indicator">
                    Loading data <span class="spinner-grow spinner-grow-sm" role="status"></span>
                </td>
            </tr>
        </HtmxFragment>
    </tbody>
</table>
